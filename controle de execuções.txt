# execução em vm e função lambda com 2 entradas e todas as configurações
# WETAG_FX = ['wetag_1743638228939', 'wetag_1743638805975', 'wetag_1743638866699', 'wetag_1743638915763', 'wetag_1743639013205']
# WETAG_VM = ['wetag_1744507705125']

# execução em função lambda com 5 entradas e todas as configurações
# execução em vm: wetag_1744508323830
# WETAG_FX = ['wetag_1743678423945', 'wetag_1743678525527', 'wetag_1743678605279', 'wetag_1743678680757', 'wetag_1743678753528']

# execução em função lambda com 10 entradas e todas as configurações
# execução em vm: wetag_1744508418711
# WETAG_FX = ['wetag_1743784949015', 'wetag_1743784751635', 'wetag_1743784544684', 'wetag_1743784315852', 'wetag_1743783985655']

# execução em função lambda com 20 entradas e todas as configurações
# execução em vm: xxxx
WETAG_FX = ['wetag_1744754708329', 'xxx', 'xxx', 'xxx', 'xxx']

# execução em função lambda com 50 entradas e todas as configurações
# execução em vm: xxxx
WETAG_FX = ['wetag_1744757716148', 'wetag_1744767700184', 'wetag_1744771889401', 'xxx', 'xxx']


# Início: April 17, 2025, 00:39:44 (UTC-03:00)
# Fim:    April 17, 2025, 00:43:18 (UTC-03:00)
wetag_201_executions_tree_and_subtree = 'wetag_1744861181586'



#####################################################################################

Execuções pra gerar instâncias para o artigo da SBPO

#####################################################################################

PASSO A PASSO:

Execução do Workflow em
1) executar o workflow em fx
  --> "run_workflow_on_lambda_and_import_provenace.py"
  --> esse programa chama a execução em fx, recupera os logs e faz a importação no Banco de Dados
  --> na atividade 3 - maf_db_creator, os tempos de ef.transfer podem ficar zerados devido ao cache na fx. Isso deve ser resolvido por um update no BD usando file_metrics.

2) recuperar a lista (em formato json) de arquivos de entrada utilizados na execução em FX
  --> handy_queries.sql: query: "arquivos de entrada para execução em VM baseados na execução em FX"

3) definir a lista de arquivos no dict "FILE_COUNT_LIST"
  --> "run_workflow__local__on_ec2_vm"

4) copiar todo o código fonte do denethor para VM
  --> denethor/scripts/aws_ec2$ ./copy_denethor_to_instance.sh src

5) conectar na VM
  --> denethor/scripts/aws_ec2$ ./connect_to_instance.sh

6) executar o denethor localmente na VM 
  --> python3.11 src/run_workflow__local__on_ec2_vm.py

7) listar os arquivos gerados
  --> ls -la resources/logs/aws_ec2/

8) copiar os arquivos de log gerados da VM para a máquina localmente, dado parte do nome do arquivo
  --> ./retrieve_log_file_from_instance.sh wetag_174

9) executar o import dos logs copiados da VM no banco de dados
  --> definir a lista de arquivos de metadata que serão importados (os que foram copiados da VM)
  --> rodar a importação através do programa: "import_provenace_from_ec2_vm"
  
10) fazer o update de ef.transfer_duration no Banco de Dados, pegando de file_metrics
  --> update_ef_transfer_duration.sql

11) gerar arquivoss de instâncias
  --> obter json com os respectivos weids
  --> definir a lista no programa
  --> "generate_instance_file_from_weid.py"


####################################
#
# RUN1
#
####################################
17/04:
-- execução em FX com [2, 5, 10] entradas para as 5 configs
>> Início: +- 15:33h
>> Fim:    +- 16:10h

-- execução em FX com [15, 20, 25, 30, 35, 40, 45, 50] entradas para as 5 configs
>> Início: +- 18:34h 
>>>> 19:12h terminou execução de 15 entradas
>>>> 23:35h terminou execução de 30 entradas
>> Fim:    +- 16:27h D+1 

->we_id between 68 and 123
METADATA_FILE_LIST = [
    "wetag_1744914790201_002_files__0128_memory.json",
    "wetag_1744914828574_002_files__0256_memory.json",
    "wetag_1744914870934_002_files__0512_memory.json",
    "wetag_1744914911217_002_files__1024_memory.json",
    "wetag_1744914952928_002_files__2048_memory.json",
    "wetag_1744914995147_005_files__0128_memory.json",
    "wetag_1744915137433_005_files__0256_memory.json",
    "wetag_1744915260665_005_files__0512_memory.json",
    "wetag_1744915387542_005_files__1024_memory.json",
    "wetag_1744915508787_005_files__2048_memory.json",
    "wetag_1744915626329_010_files__0128_memory.json",
    "wetag_1744916064551_010_files__0256_memory.json",
    "wetag_1744916444073_010_files__0512_memory.json",
    "wetag_1744916656057_010_files__1024_memory.json",
    "wetag_1744916853095_010_files__2048_memory.json",
    "wetag_1744925615239_015_files__0128_memory.json",
    "wetag_1744926176656_015_files__0256_memory.json",
    "wetag_1744926636296_015_files__0512_memory.json",
    "wetag_1744927033576_015_files__1024_memory.json",
    "wetag_1744927499127_015_files__2048_memory.json",
    "wetag_1744927855681_020_files__0128_memory.json",
    "wetag_1744928762907_020_files__0256_memory.json",
    "wetag_1744929498191_020_files__0512_memory.json",
    "wetag_1744930137707_020_files__1024_memory.json",
    "wetag_1744930729017_020_files__2048_memory.json",
    "wetag_1744931309716_025_files__0128_memory.json",
    "wetag_1744932704051_025_files__0256_memory.json",
    "wetag_1744933782735_025_files__0512_memory.json",
    "wetag_1744934745326_025_files__1024_memory.json",
    "wetag_1744935641362_025_files__2048_memory.json",
    "wetag_1744936511204_030_files__0128_memory.json",
    "wetag_1744938720847_030_files__0256_memory.json",
    "wetag_1744940277645_030_files__0512_memory.json",
    "wetag_1744941844789_030_files__1024_memory.json",
    "wetag_1744943300165_030_files__2048_memory.json",
    "wetag_1744944533259_035_files__0128_memory.json",
    "wetag_1744947058326_035_files__0256_memory.json",
    "wetag_1744949123954_035_files__0512_memory.json",
    "wetag_1744950911817_035_files__1024_memory.json",
    "wetag_1744952833930_035_files__2048_memory.json",
    "wetag_1744954447499_040_files__0128_memory.json",
    "wetag_1744957645644_040_files__0256_memory.json",
    "wetag_1744960234683_040_files__0512_memory.json",
    "wetag_1744962544966_040_files__1024_memory.json",
    "wetag_1744964743402_040_files__2048_memory.json",
    "wetag_1744966903900_045_files__0128_memory.json",
    "wetag_1744971322488_045_files__0256_memory.json",
    "wetag_1744974660919_045_files__0512_memory.json",
    "wetag_1744978134104_045_files__1024_memory.json",
    "wetag_1744980905574_045_files__2048_memory.json",
    "wetag_1744983597785_050_files__0128_memory.json",
    "wetag_1744988754669_050_files__0256_memory.json",
    "wetag_1744992901162_050_files__0512_memory.json",
    "wetag_1744996712646_050_files__1024_memory.json",
    "wetag_1745001061661_050_files__2048_memory.json",
    ]


*18/04
-- execução em VM: [2, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50]
>> Início: 19:03h
>> Fim: 19:11
-- Import de dados no BD
>>Início: 21:58
>>Fim: 23:45+++++

->we_id between 124 and 134
METADATA_FILE_LIST = [
        "wetag_1745013809114_002_files__1024_memory.json",
        "wetag_1745014054593_005_files__1024_memory.json",
        "wetag_1745014057207_010_files__1024_memory.json",
        "wetag_1745014063276_015_files__1024_memory.json",
        "wetag_1745014073730_020_files__1024_memory.json",
        "wetag_1745014088923_025_files__1024_memory.json",
        "wetag_1745014109475_030_files__1024_memory.json",
        "wetag_1745014136382_035_files__1024_memory.json",
        "wetag_1745014169990_040_files__1024_memory.json",
        "wetag_1745014211149_045_files__1024_memory.json",
        "wetag_1745014259016_050_files__1024_memory.json",
    ]


20/04/2025
Geração de arquivos de instâncias
#run1
# INPUT_WEIDS_FX = [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123]
# INPUT_WEIDS_VM = [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134]

WEID_PROVIDER_DICT = {
    "2": {"aws_ec2": [124], "aws_lambda": [68, 69, 70, 71, 72]},
    "5": {"aws_ec2": [125], "aws_lambda": [73, 74, 75, 76, 77]},
    "10": {"aws_ec2": [126], "aws_lambda": [78, 79, 80, 81, 82]},
    "15": {"aws_ec2": [127], "aws_lambda": [84, 85, 86, 87, 88]},
    "20": {"aws_ec2": [128], "aws_lambda": [89, 90, 91, 92, 93]},
    "25": {"aws_ec2": [129], "aws_lambda": [94, 95, 96, 97, 98]},
    "30": {"aws_ec2": [130], "aws_lambda": [99, 100, 101, 102, 103]},
    "35": {"aws_ec2": [131], "aws_lambda": [104, 105, 106, 107, 108]},
    "40": {"aws_ec2": [132], "aws_lambda": [109, 110, 111, 112, 113]},
    "45": {"aws_ec2": [133], "aws_lambda": [114, 115, 116, 117, 118]},
    "50": {"aws_ec2": [134], "aws_lambda": [119, 120, 121, 122, 123]},
}




####################################
#
# RUN2
#
####################################

21/04/2025
Execução com arquivos aleatórios -> [2, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50]
17:22h a 07:21h D+1 = +- 14h execução


22/04/2025
Execução em vm com as mesmas entradas da função
INPUT_FILE_DICT = {
        "2": ["ORTHOMCL787", "ORTHOMCL1861"],
        "5": ["ORTHOMCL441", "ORTHOMCL625", "ORTHOMCL888", "ORTHOMCL916", "ORTHOMCL1305"],
        "10": ["ORTHOMCL537", "ORTHOMCL581", "ORTHOMCL755", "ORTHOMCL833", "ORTHOMCL866", "ORTHOMCL989", "ORTHOMCL1005", "ORTHOMCL1408", "ORTHOMCL1491", "ORTHOMCL1541"],
        "15": ["ORTHOMCL364", "ORTHOMCL374", "ORTHOMCL441", "ORTHOMCL510", "ORTHOMCL726", "ORTHOMCL989", "ORTHOMCL1008", "ORTHOMCL1038", "ORTHOMCL1136", "ORTHOMCL1378", "ORTHOMCL1813", "ORTHOMCL1890", "ORTHOMCL1915", "ORTHOMCL1965", "ORTHOMCL1996"],
        "20": ["ORTHOMCL1", "ORTHOMCL424", "ORTHOMCL613", "ORTHOMCL830", "ORTHOMCL836", "ORTHOMCL854", "ORTHOMCL888", "ORTHOMCL942", "ORTHOMCL964", "ORTHOMCL983", "ORTHOMCL988", "ORTHOMCL1021", "ORTHOMCL1113", "ORTHOMCL1131", "ORTHOMCL1166", "ORTHOMCL1305", "ORTHOMCL1378", "ORTHOMCL1464", "ORTHOMCL1861", "ORTHOMCL1997"],
        "25": ["ORTHOMCL515", "ORTHOMCL534", "ORTHOMCL581", "ORTHOMCL744", "ORTHOMCL877", "ORTHOMCL884", "ORTHOMCL964", "ORTHOMCL1000", "ORTHOMCL1005", "ORTHOMCL1008", "ORTHOMCL1009", "ORTHOMCL1039", "ORTHOMCL1074", "ORTHOMCL1125", "ORTHOMCL1129", "ORTHOMCL1136", "ORTHOMCL1147", "ORTHOMCL1311", "ORTHOMCL1491", "ORTHOMCL1677", "ORTHOMCL1678", "ORTHOMCL1762", "ORTHOMCL1772", "ORTHOMCL1977", "ORTHOMCL2001"],
        "30": ["ORTHOMCL1", "ORTHOMCL364", "ORTHOMCL465", "ORTHOMCL510", "ORTHOMCL617", "ORTHOMCL641", "ORTHOMCL659", "ORTHOMCL758", "ORTHOMCL763", "ORTHOMCL854", "ORTHOMCL884", "ORTHOMCL908", "ORTHOMCL943", "ORTHOMCL964", "ORTHOMCL1003", "ORTHOMCL1005", "ORTHOMCL1008", "ORTHOMCL1033", "ORTHOMCL1042", "ORTHOMCL1129", "ORTHOMCL1305", "ORTHOMCL1314", "ORTHOMCL1385", "ORTHOMCL1403", "ORTHOMCL1442", "ORTHOMCL1678", "ORTHOMCL1770", "ORTHOMCL1958", "ORTHOMCL1984", "ORTHOMCL2001"],
        "35": ["ORTHOMCL421", "ORTHOMCL465", "ORTHOMCL524", "ORTHOMCL525", "ORTHOMCL537", "ORTHOMCL592", "ORTHOMCL652", "ORTHOMCL728", "ORTHOMCL763", "ORTHOMCL780", "ORTHOMCL818", "ORTHOMCL841", "ORTHOMCL858", "ORTHOMCL878", "ORTHOMCL888", "ORTHOMCL1002", "ORTHOMCL1005", "ORTHOMCL1029", "ORTHOMCL1043", "ORTHOMCL1092", "ORTHOMCL1136", "ORTHOMCL1314", "ORTHOMCL1334", "ORTHOMCL1370", "ORTHOMCL1374", "ORTHOMCL1591", "ORTHOMCL1678", "ORTHOMCL1762", "ORTHOMCL1770", "ORTHOMCL1863", "ORTHOMCL1906", "ORTHOMCL1915", "ORTHOMCL1958", "ORTHOMCL1965", "ORTHOMCL1984"],
        "40": ["ORTHOMCL441", "ORTHOMCL525", "ORTHOMCL540", "ORTHOMCL609", "ORTHOMCL613", "ORTHOMCL626", "ORTHOMCL648", "ORTHOMCL650", "ORTHOMCL744", "ORTHOMCL836", "ORTHOMCL838", "ORTHOMCL872", "ORTHOMCL875", "ORTHOMCL884", "ORTHOMCL916", "ORTHOMCL918", "ORTHOMCL938", "ORTHOMCL948", "ORTHOMCL968", "ORTHOMCL989", "ORTHOMCL993", "ORTHOMCL1007", "ORTHOMCL1083", "ORTHOMCL1146", "ORTHOMCL1147", "ORTHOMCL1305", "ORTHOMCL1314", "ORTHOMCL1404", "ORTHOMCL1442", "ORTHOMCL1480", "ORTHOMCL1490", "ORTHOMCL1491", "ORTHOMCL1770", "ORTHOMCL1772", "ORTHOMCL1882", "ORTHOMCL1906", "ORTHOMCL1909", "ORTHOMCL1952", "ORTHOMCL1958", "ORTHOMCL2033"],
        "45": ["ORTHOMCL358", "ORTHOMCL458", "ORTHOMCL525", "ORTHOMCL526", "ORTHOMCL592", "ORTHOMCL625", "ORTHOMCL626", "ORTHOMCL641", "ORTHOMCL667", "ORTHOMCL726", "ORTHOMCL758", "ORTHOMCL790", "ORTHOMCL877", "ORTHOMCL884", "ORTHOMCL974", "ORTHOMCL983", "ORTHOMCL989", "ORTHOMCL1005", "ORTHOMCL1007", "ORTHOMCL1008", "ORTHOMCL1021", "ORTHOMCL1027", "ORTHOMCL1038", "ORTHOMCL1043", "ORTHOMCL1092", "ORTHOMCL1113", "ORTHOMCL1129", "ORTHOMCL1135", "ORTHOMCL1147", "ORTHOMCL1305", "ORTHOMCL1410", "ORTHOMCL1591", "ORTHOMCL1772", "ORTHOMCL1788", "ORTHOMCL1816", "ORTHOMCL1833", "ORTHOMCL1875", "ORTHOMCL1940", "ORTHOMCL1958", "ORTHOMCL1973", "ORTHOMCL1985", "ORTHOMCL1996", "ORTHOMCL1997", "ORTHOMCL2001", "ORTHOMCL2020"],
        "50": ["ORTHOMCL1", "ORTHOMCL256", "ORTHOMCL320", "ORTHOMCL358", "ORTHOMCL458", "ORTHOMCL534", "ORTHOMCL537", "ORTHOMCL592", "ORTHOMCL641", "ORTHOMCL650", "ORTHOMCL667", "ORTHOMCL680", "ORTHOMCL768", "ORTHOMCL818", "ORTHOMCL838", "ORTHOMCL841", "ORTHOMCL853", "ORTHOMCL877", "ORTHOMCL878", "ORTHOMCL888", "ORTHOMCL908", "ORTHOMCL938", "ORTHOMCL974", "ORTHOMCL989", "ORTHOMCL1003", "ORTHOMCL1005", "ORTHOMCL1008", "ORTHOMCL1009", "ORTHOMCL1027", "ORTHOMCL1034", "ORTHOMCL1042", "ORTHOMCL1083", "ORTHOMCL1092", "ORTHOMCL1104", "ORTHOMCL1125", "ORTHOMCL1129", "ORTHOMCL1166", "ORTHOMCL1316", "ORTHOMCL1374", "ORTHOMCL1591", "ORTHOMCL1788", "ORTHOMCL1809", "ORTHOMCL1816", "ORTHOMCL1861", "ORTHOMCL1890", "ORTHOMCL1895", "ORTHOMCL1909", "ORTHOMCL1916", "ORTHOMCL1984", "ORTHOMCL1985"]
    }

de 13:14h a 13:17h

METADATA_FILE_LIST = [
    "wetag_1745338482662_002_files__1024_memory.json", 
    "wetag_1745338483556_005_files__1024_memory.json", 
    "wetag_1745338485406_010_files__1024_memory.json", 
    "wetag_1745338489322_015_files__1024_memory.json", 
    "wetag_1745338495958_020_files__1024_memory.json", 
    "wetag_1745338504859_025_files__1024_memory.json", 
    "wetag_1745338516583_030_files__1024_memory.json", 
    "wetag_1745338531891_035_files__1024_memory.json", 
    "wetag_1745338550578_040_files__1024_memory.json", 
    "wetag_1745338573132_045_files__1024_memory.json", 
    "wetag_1745338599911_050_files__1024_memory.json", 
]

Importação dos arquivos: final em 18:05h

- Gerar instâncias
#run1
INPUT_WEIDS_FX = [135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189]
INPUT_WEIDS_VM = [190,191,192,193,194,195,196,197,198,199,200]







####################################
#
# RUN3
#
####################################

21/04/2025 - 21:26h
Execução com arquivos aleatórios -> [2, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50]



24/04 - execução em VM
#run3
    workflow_input_files_by_count = { 
        "2" : ["ORTHOMCL371", "ORTHOMCL1313"],
        "5" : ["ORTHOMCL458", "ORTHOMCL938", "ORTHOMCL1027", "ORTHOMCL1370", "ORTHOMCL1678"],
        "10" : ["ORTHOMCL424", "ORTHOMCL626", "ORTHOMCL758", "ORTHOMCL763", "ORTHOMCL1043", "ORTHOMCL1100", "ORTHOMCL1146", "ORTHOMCL1370", "ORTHOMCL1809", "ORTHOMCL1869"],
        "15" : ["ORTHOMCL1", "ORTHOMCL358", "ORTHOMCL458", "ORTHOMCL613", "ORTHOMCL818", "ORTHOMCL884", "ORTHOMCL964", "ORTHOMCL968", "ORTHOMCL974", "ORTHOMCL1083", "ORTHOMCL1305", "ORTHOMCL1316", "ORTHOMCL1490", "ORTHOMCL1965", "ORTHOMCL2001"],
        "20" : ["ORTHOMCL364", "ORTHOMCL374", "ORTHOMCL421", "ORTHOMCL424", "ORTHOMCL648", "ORTHOMCL733", "ORTHOMCL835", "ORTHOMCL942", "ORTHOMCL947", "ORTHOMCL965", "ORTHOMCL968", "ORTHOMCL1008", "ORTHOMCL1100", "ORTHOMCL1408", "ORTHOMCL1527", "ORTHOMCL1619", "ORTHOMCL1816", "ORTHOMCL1869", "ORTHOMCL1890", "ORTHOMCL1906"],
        "25" : ["ORTHOMCL337", "ORTHOMCL510", "ORTHOMCL557", "ORTHOMCL588", "ORTHOMCL596", "ORTHOMCL625", "ORTHOMCL652", "ORTHOMCL780", "ORTHOMCL787", "ORTHOMCL790", "ORTHOMCL884", "ORTHOMCL942", "ORTHOMCL983", "ORTHOMCL990", "ORTHOMCL1008", "ORTHOMCL1087", "ORTHOMCL1316", "ORTHOMCL1374", "ORTHOMCL1375", "ORTHOMCL1678", "ORTHOMCL1779", "ORTHOMCL1833", "ORTHOMCL1895", "ORTHOMCL1940", "ORTHOMCL1952"],
        "30" : ["ORTHOMCL256_2", "ORTHOMCL371", "ORTHOMCL524", "ORTHOMCL626", "ORTHOMCL650", "ORTHOMCL659", "ORTHOMCL665", "ORTHOMCL744", "ORTHOMCL780", "ORTHOMCL836", "ORTHOMCL866", "ORTHOMCL877", "ORTHOMCL878", "ORTHOMCL942", "ORTHOMCL948", "ORTHOMCL989", "ORTHOMCL1002", "ORTHOMCL1043", "ORTHOMCL1127", "ORTHOMCL1129", "ORTHOMCL1166", "ORTHOMCL1311", "ORTHOMCL1352", "ORTHOMCL1480", "ORTHOMCL1677", "ORTHOMCL1686", "ORTHOMCL1882", "ORTHOMCL1915", "ORTHOMCL1952", "ORTHOMCL1985"],
        "35" : ["ORTHOMCL337", "ORTHOMCL358", "ORTHOMCL364", "ORTHOMCL465", "ORTHOMCL515", "ORTHOMCL524", "ORTHOMCL609", "ORTHOMCL625", "ORTHOMCL626", "ORTHOMCL721", "ORTHOMCL733", "ORTHOMCL741", "ORTHOMCL757", "ORTHOMCL787", "ORTHOMCL790", "ORTHOMCL818", "ORTHOMCL830", "ORTHOMCL841", "ORTHOMCL877", "ORTHOMCL884", "ORTHOMCL1021", "ORTHOMCL1023", "ORTHOMCL1029", "ORTHOMCL1039", "ORTHOMCL1100", "ORTHOMCL1104", "ORTHOMCL1518", "ORTHOMCL1780", "ORTHOMCL1788", "ORTHOMCL1795", "ORTHOMCL1833", "ORTHOMCL1861", "ORTHOMCL1909", "ORTHOMCL1916", "ORTHOMCL1954"],
        "40" : ["ORTHOMCL320", "ORTHOMCL337", "ORTHOMCL358", "ORTHOMCL537", "ORTHOMCL557", "ORTHOMCL588", "ORTHOMCL592", "ORTHOMCL613", "ORTHOMCL741", "ORTHOMCL746", "ORTHOMCL748", "ORTHOMCL750", "ORTHOMCL818", "ORTHOMCL853", "ORTHOMCL938", "ORTHOMCL943", "ORTHOMCL968", "ORTHOMCL974", "ORTHOMCL1002", "ORTHOMCL1007", "ORTHOMCL1008", "ORTHOMCL1009", "ORTHOMCL1027", "ORTHOMCL1083", "ORTHOMCL1113", "ORTHOMCL1125", "ORTHOMCL1129", "ORTHOMCL1135", "ORTHOMCL1136", "ORTHOMCL1305", "ORTHOMCL1334", "ORTHOMCL1359", "ORTHOMCL1378", "ORTHOMCL1385", "ORTHOMCL1403", "ORTHOMCL1518", "ORTHOMCL1788", "ORTHOMCL1984", "ORTHOMCL1997", "ORTHOMCL2033"],
        "45" : ["ORTHOMCL1", "ORTHOMCL256_2", "ORTHOMCL320", "ORTHOMCL371", "ORTHOMCL510", "ORTHOMCL617", "ORTHOMCL652", "ORTHOMCL721", "ORTHOMCL744", "ORTHOMCL746", "ORTHOMCL763", "ORTHOMCL830", "ORTHOMCL854", "ORTHOMCL875", "ORTHOMCL884", "ORTHOMCL885", "ORTHOMCL938", "ORTHOMCL964", "ORTHOMCL965", "ORTHOMCL974", "ORTHOMCL1005", "ORTHOMCL1021", "ORTHOMCL1033", "ORTHOMCL1034", "ORTHOMCL1042", "ORTHOMCL1087", "ORTHOMCL1092", "ORTHOMCL1125", "ORTHOMCL1126", "ORTHOMCL1136", "ORTHOMCL1147", "ORTHOMCL1166", "ORTHOMCL1305", "ORTHOMCL1311", "ORTHOMCL1352", "ORTHOMCL1363", "ORTHOMCL1408", "ORTHOMCL1410", "ORTHOMCL1619", "ORTHOMCL1833", "ORTHOMCL1916", "ORTHOMCL1940", "ORTHOMCL1958", "ORTHOMCL1984", "ORTHOMCL2001"],
        "50" : ["ORTHOMCL364", "ORTHOMCL371", "ORTHOMCL374", "ORTHOMCL524", "ORTHOMCL537", "ORTHOMCL557", "ORTHOMCL617", "ORTHOMCL650", "ORTHOMCL667", "ORTHOMCL680", "ORTHOMCL721", "ORTHOMCL733", "ORTHOMCL741", "ORTHOMCL750", "ORTHOMCL787", "ORTHOMCL818", "ORTHOMCL833", "ORTHOMCL835", "ORTHOMCL836", "ORTHOMCL838", "ORTHOMCL841", "ORTHOMCL878", "ORTHOMCL888", "ORTHOMCL943", "ORTHOMCL964", "ORTHOMCL988", "ORTHOMCL1009", "ORTHOMCL1029", "ORTHOMCL1034", "ORTHOMCL1039", "ORTHOMCL1127", "ORTHOMCL1166", "ORTHOMCL1311", "ORTHOMCL1316", "ORTHOMCL1352", "ORTHOMCL1359", "ORTHOMCL1378", "ORTHOMCL1385", "ORTHOMCL1410", "ORTHOMCL1464", "ORTHOMCL1518", "ORTHOMCL1619", "ORTHOMCL1706", "ORTHOMCL1779", "ORTHOMCL1788", "ORTHOMCL1813", "ORTHOMCL1875", "ORTHOMCL1915", "ORTHOMCL1985", "ORTHOMCL2020"] 
    }
   

- Gerar instâncias
#run3
INPUT_WEIDS_FX = [201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256]
INPUT_WEIDS_VM = [257,258,259,260,261,262,263,264,265,266,267]




####################################
#
# RUN4
#
####################################


Execução com primeiros n arquivos -> [60, 70, 80, 90, 100]




####################################
#
# RUN5
#
####################################


Execução com primeiros n arquivos -> [60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 201]
