# execução em vm e função lambda com 2 entradas e todas as configurações
# WETAG_FX = ['wetag_1743638228939', 'wetag_1743638805975', 'wetag_1743638866699', 'wetag_1743638915763', 'wetag_1743639013205']
# WETAG_VM = ['wetag_1744507705125']

# execução em função lambda com 5 entradas e todas as configurações
# execução em vm: wetag_1744508323830
# WETAG_FX = ['wetag_1743678423945', 'wetag_1743678525527', 'wetag_1743678605279', 'wetag_1743678680757', 'wetag_1743678753528']

# execução em função lambda com 10 entradas e todas as configurações
# execução em vm: wetag_1744508418711
# WETAG_FX = ['wetag_1743784949015', 'wetag_1743784751635', 'wetag_1743784544684', 'wetag_1743784315852', 'wetag_1743783985655']

# execução em função lambda com 20 entradas e todas as configurações
# execução em vm: xxxx
WETAG_FX = ['wetag_1744754708329', 'xxx', 'xxx', 'xxx', 'xxx']

# execução em função lambda com 50 entradas e todas as configurações
# execução em vm: xxxx
WETAG_FX = ['wetag_1744757716148', 'wetag_1744767700184', 'wetag_1744771889401', 'xxx', 'xxx']


# Início: April 17, 2025, 00:39:44 (UTC-03:00)
# Fim:    April 17, 2025, 00:43:18 (UTC-03:00)
wetag_201_executions_tree_and_subtree = 'wetag_1744861181586'



#####################################################################################

Execuções pra gerar instâncias para o artigo da SBPO

#####################################################################################

PASSO A PASSO:

Execução do Workflow em
1) executar o workflow em fx
  --> "run_workflow_on_lambda_and_import_provenace.py"
  --> esse programa chama a execução em fx, recupera os logs e faz a importação no Banco de Dados
  --> na atividade 3 - maf_db_creator, os tempos de ef.transfer podem ficar zerados devido ao cache na fx. Isso deve ser resolvido por um update no BD usando file_metrics.

2) recuperar a lista (em formato json) de arquivos de entrada utilizados na execução em FX
  --> handy_queries.sql: query: "arquivos de entrada para execução em VM baseados na execução em FX"

3) definir a lista de arquivos no dict "FILE_COUNT_LIST"
  --> "run_workflow__local__on_ec2_vm"

4) copiar todo o código fonte do denethor para VM
  --> denethor/scripts/aws_ec2$ ./copy_denethor_to_instance.sh src

5) conectar na VM
  --> denethor/scripts/aws_ec2$ ./connect_to_instance.sh

6) executar o denethor localmente na VM 
  --> python3.11 src/run_workflow__local__on_ec2_vm.py

7) listar os arquivos gerados
  --> ls -la resources/logs/aws_ec2/

8) copiar os arquivos de log gerados da VM para a máquina localmente, dado parte do nome do arquivo
  --> ./retrieve_log_file_from_instance.sh wetag_174

9) executar o import dos logs copiados da VM no banco de dados
  --> definir a lista de arquivos de metadata que serão importados (os que foram copiados da VM)
  --> rodar a importação através do programa: "import_provenace_from_ec2_vm"
  
10) fazer o update de ef.transfer_duration no Banco de Dados, pegando de file_metrics
  --> update_ef_transfer_duration.sql

11) gerar arquivoss de instâncias
  --> obter json com os respectivos weids
  --> definir a lista no programa
  --> "generate_instance_file_from_weid.py"


17/04:
-- execução em FX com [2, 5, 10] entradas para as 5 configs
>> Início: +- 15:33h
>> Fim:    +- 16:10h

-- execução em FX com [15, 20, 25, 30, 35, 40, 45, 50] entradas para as 5 configs
>> Início: +- 18:34h 
>>>> 19:12h terminou execução de 15 entradas
>>>> 23:35h terminou execução de 30 entradas
>> Fim:    +- 16:27h D+1 

->we_id between 68 and 123
METADATA_FILE_LIST = [
    "wetag_1744914790201_002_files__0128_memory.json",
    "wetag_1744914828574_002_files__0256_memory.json",
    "wetag_1744914870934_002_files__0512_memory.json",
    "wetag_1744914911217_002_files__1024_memory.json",
    "wetag_1744914952928_002_files__2048_memory.json",
    "wetag_1744914995147_005_files__0128_memory.json",
    "wetag_1744915137433_005_files__0256_memory.json",
    "wetag_1744915260665_005_files__0512_memory.json",
    "wetag_1744915387542_005_files__1024_memory.json",
    "wetag_1744915508787_005_files__2048_memory.json",
    "wetag_1744915626329_010_files__0128_memory.json",
    "wetag_1744916064551_010_files__0256_memory.json",
    "wetag_1744916444073_010_files__0512_memory.json",
    "wetag_1744916656057_010_files__1024_memory.json",
    "wetag_1744916853095_010_files__2048_memory.json",
    "wetag_1744925615239_015_files__0128_memory.json",
    "wetag_1744926176656_015_files__0256_memory.json",
    "wetag_1744926636296_015_files__0512_memory.json",
    "wetag_1744927033576_015_files__1024_memory.json",
    "wetag_1744927499127_015_files__2048_memory.json",
    "wetag_1744927855681_020_files__0128_memory.json",
    "wetag_1744928762907_020_files__0256_memory.json",
    "wetag_1744929498191_020_files__0512_memory.json",
    "wetag_1744930137707_020_files__1024_memory.json",
    "wetag_1744930729017_020_files__2048_memory.json",
    "wetag_1744931309716_025_files__0128_memory.json",
    "wetag_1744932704051_025_files__0256_memory.json",
    "wetag_1744933782735_025_files__0512_memory.json",
    "wetag_1744934745326_025_files__1024_memory.json",
    "wetag_1744935641362_025_files__2048_memory.json",
    "wetag_1744936511204_030_files__0128_memory.json",
    "wetag_1744938720847_030_files__0256_memory.json",
    "wetag_1744940277645_030_files__0512_memory.json",
    "wetag_1744941844789_030_files__1024_memory.json",
    "wetag_1744943300165_030_files__2048_memory.json",
    "wetag_1744944533259_035_files__0128_memory.json",
    "wetag_1744947058326_035_files__0256_memory.json",
    "wetag_1744949123954_035_files__0512_memory.json",
    "wetag_1744950911817_035_files__1024_memory.json",
    "wetag_1744952833930_035_files__2048_memory.json",
    "wetag_1744954447499_040_files__0128_memory.json",
    "wetag_1744957645644_040_files__0256_memory.json",
    "wetag_1744960234683_040_files__0512_memory.json",
    "wetag_1744962544966_040_files__1024_memory.json",
    "wetag_1744964743402_040_files__2048_memory.json",
    "wetag_1744966903900_045_files__0128_memory.json",
    "wetag_1744971322488_045_files__0256_memory.json",
    "wetag_1744974660919_045_files__0512_memory.json",
    "wetag_1744978134104_045_files__1024_memory.json",
    "wetag_1744980905574_045_files__2048_memory.json",
    "wetag_1744983597785_050_files__0128_memory.json",
    "wetag_1744988754669_050_files__0256_memory.json",
    "wetag_1744992901162_050_files__0512_memory.json",
    "wetag_1744996712646_050_files__1024_memory.json",
    "wetag_1745001061661_050_files__2048_memory.json",
    ]


*18/04
-- execução em VM: [2, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50]
>> Início: 19:03h
>> Fim: 19:11
-- Import de dados no BD
>>Início: 21:58
>>Fim: 23:45+++++

->we_id between 124 and 134
METADATA_FILE_LIST = [
        "wetag_1745013809114_002_files__1024_memory.json",
        "wetag_1745014054593_005_files__1024_memory.json",
        "wetag_1745014057207_010_files__1024_memory.json",
        "wetag_1745014063276_015_files__1024_memory.json",
        "wetag_1745014073730_020_files__1024_memory.json",
        "wetag_1745014088923_025_files__1024_memory.json",
        "wetag_1745014109475_030_files__1024_memory.json",
        "wetag_1745014136382_035_files__1024_memory.json",
        "wetag_1745014169990_040_files__1024_memory.json",
        "wetag_1745014211149_045_files__1024_memory.json",
        "wetag_1745014259016_050_files__1024_memory.json",
    ]


20/04/2025
Geração de arquivos de instâncias
#run1
WEID_PROVIDER_DICT = {
    "2": {"aws_ec2": [124], "aws_lambda": [68, 69, 70, 71, 72]},
    "5": {"aws_ec2": [125], "aws_lambda": [73, 74, 75, 76, 77]},
    "10": {"aws_ec2": [126], "aws_lambda": [78, 79, 80, 81, 82]},
    "15": {"aws_ec2": [127], "aws_lambda": [84, 85, 86, 87, 88]},
    "20": {"aws_ec2": [128], "aws_lambda": [89, 90, 91, 92, 93]},
    "25": {"aws_ec2": [129], "aws_lambda": [94, 95, 96, 97, 98]},
    "30": {"aws_ec2": [130], "aws_lambda": [99, 100, 101, 102, 103]},
    "35": {"aws_ec2": [131], "aws_lambda": [104, 105, 106, 107, 108]},
    "40": {"aws_ec2": [132], "aws_lambda": [109, 110, 111, 112, 113]},
    "45": {"aws_ec2": [133], "aws_lambda": [114, 115, 116, 117, 118]},
    "50": {"aws_ec2": [134], "aws_lambda": [119, 120, 121, 122, 123]},
}




####################################
Run2
####################################

21/04/2025
Execução com arquivos aleatórios -> [2, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50]
17:22h a 07:21h D+1 = +- 14h execução


22/04/2025
Execução em vm com as mesmas entradas da função
de 13:14h a 13:17h

METADATA_FILE_LIST = [
    "wetag_1745338482662_002_files__1024_memory.json", 
    "wetag_1745338483556_005_files__1024_memory.json", 
    "wetag_1745338485406_010_files__1024_memory.json", 
    "wetag_1745338489322_015_files__1024_memory.json", 
    "wetag_1745338495958_020_files__1024_memory.json", 
    "wetag_1745338504859_025_files__1024_memory.json", 
    "wetag_1745338516583_030_files__1024_memory.json", 
    "wetag_1745338531891_035_files__1024_memory.json", 
    "wetag_1745338550578_040_files__1024_memory.json", 
    "wetag_1745338573132_045_files__1024_memory.json", 
    "wetag_1745338599911_050_files__1024_memory.json", 
]

Importação dos arquivos: final em 18:05h

- Gerar instâncias
#run1
INPUT_WEIDS_FX = [135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189]
INPUT_WEIDS_VM = [190,191,192,193,194,195,196,197,198,199,200]
