{
    "date_time_utc": "2025-04-23T00:30:05.958031+00:00",
    "workflow_name": "AWS Lambda Evaluation",
    "execution_tag": "wetag_1745368195890",
    "workflow_start_time_ms": 1745368195890,
    "workflow_end_time_ms": 1745368205957,
    "runtime_data": {
        "input_files": [
            {
                "data": "ORTHOMCL458"
            },
            {
                "data": "ORTHOMCL938"
            },
            {
                "data": "ORTHOMCL1027"
            },
            {
                "data": "ORTHOMCL1370"
            },
            {
                "data": "ORTHOMCL1678"
            }
        ],
        "tree_files": [
            {
                "request_id": "6c0efa4f-e0e9-4617-b9e0-12c442560fe1",
                "data": [
                    "tree_ORTHOMCL458.nexus"
                ]
            },
            {
                "request_id": "cef0a07d-f397-48a6-9b56-528006bda186",
                "data": [
                    "tree_ORTHOMCL938.nexus"
                ]
            },
            {
                "request_id": "9fc35e91-27de-4b67-ac58-e5fb64a5daaf",
                "data": [
                    "tree_ORTHOMCL1027.nexus"
                ]
            },
            {
                "request_id": "c62db86a-1dfd-4a39-8ffc-25f381f43831",
                "data": [
                    "tree_ORTHOMCL1370.nexus"
                ]
            },
            {
                "request_id": "f1f57d3f-27be-435f-9a4d-175a6382cf1d",
                "data": [
                    "tree_ORTHOMCL1678.nexus"
                ]
            }
        ],
        "subtree_files": [
            {
                "request_id": "cfc4080d-1ebb-48c0-b180-398754c0069d",
                "data": [
                    "tree_ORTHOMCL458_Inner1.nexus",
                    "tree_ORTHOMCL458_Inner2.nexus",
                    "tree_ORTHOMCL458_Inner3.nexus",
                    "tree_ORTHOMCL458_Inner4.nexus",
                    "tree_ORTHOMCL458_Inner5.nexus"
                ]
            },
            {
                "request_id": "c4d9f123-3a22-4fdf-8488-81982a6fceb5",
                "data": [
                    "tree_ORTHOMCL938_Inner1.nexus",
                    "tree_ORTHOMCL938_Inner2.nexus",
                    "tree_ORTHOMCL938_Inner3.nexus",
                    "tree_ORTHOMCL938_Inner4.nexus"
                ]
            },
            {
                "request_id": "3bba3060-2c2d-4eeb-aca3-6446a5e22b69",
                "data": [
                    "tree_ORTHOMCL1027_Inner1.nexus",
                    "tree_ORTHOMCL1027_Inner2.nexus",
                    "tree_ORTHOMCL1027_Inner3.nexus",
                    "tree_ORTHOMCL1027_Inner4.nexus"
                ]
            },
            {
                "request_id": "4f14c1b1-2a08-47ae-aa3d-ac4f3703d0d6",
                "data": [
                    "tree_ORTHOMCL1370_Inner1.nexus",
                    "tree_ORTHOMCL1370_Inner2.nexus",
                    "tree_ORTHOMCL1370_Inner3.nexus"
                ]
            },
            {
                "request_id": "bcdea3e8-c809-4ea7-934a-6b21c878b6ae",
                "data": [
                    "tree_ORTHOMCL1678_Inner1.nexus",
                    "tree_ORTHOMCL1678_Inner2.nexus",
                    "tree_ORTHOMCL1678_Inner3.nexus"
                ]
            }
        ],
        "intermediate_mafdb_files": [
            {
                "request_id": "31eab836-fac9-4196-9584-01cea4900c31",
                "data": "mafdb_c5b5a3a4bd54a110140df77527325958d257fc9b669bca89b332593540c1dc20.json"
            },
            {
                "request_id": "56b73d77-3424-4439-9819-83db13cc1c3e",
                "data": "mafdb_028a779bdcb28d0db67ae99e8c383a2e5e0fd59fada6888e043db6f251521c76.json"
            },
            {
                "request_id": "0c80a9f6-f6b9-4b13-801c-9720b14e69f9",
                "data": "mafdb_4e1eee323294b31497381cadce8756e0c91a4a8f4488ecc02e34152dbd13d2c8.json"
            },
            {
                "request_id": "562a6c1b-71ae-4b93-823d-76219aa799d1",
                "data": "mafdb_8c09c2c75aa3430d702a5f6a7188b4a4f1d060ce985897c6b50bcff7279e6547.json"
            },
            {
                "request_id": "84c0a6f9-eb12-4c90-8fb6-15907df0d84f",
                "data": "mafdb_6ee93fa3e17d8465d80c68957453793c4017d5d2d02f3c35b598aa6b61c743eb.json"
            }
        ],
        "final_mafdb_file": [
            {
                "request_id": "e7b18b34-99dc-4ffc-a134-84e76586016b",
                "data": "mafdb_a469ff96c9e0f4af72bb8a79510ceb311d3d441151792409b89deef53ac3afae.json"
            }
        ]
    },
    "workflow_steps": [
        {
            "activity": "tree_constructor",
            "provider": "aws_lambda",
            "memory": 512,
            "strategy": "for_each_input",
            "data_params": {
                "input_files_path": "resources/data/full_dataset",
                "input_files_list": [
                    "ORTHOMCL458",
                    "ORTHOMCL1027",
                    "ORTHOMCL1370",
                    "ORTHOMCL938",
                    "ORTHOMCL1678"
                ],
                "param_in": "input_files",
                "param_out": "tree_files"
            },
            "active": true
        },
        {
            "activity": "subtree_constructor",
            "provider": "aws_lambda",
            "memory": 512,
            "strategy": "for_each_input",
            "data_params": {
                "param_in": "tree_files",
                "param_out": "subtree_files"
            },
            "active": true
        },
        {
            "activity": "maf_database_creator",
            "provider": "aws_lambda",
            "memory": 512,
            "strategy": "for_each_input",
            "data_params": {
                "param_in": "subtree_files",
                "param_out": "intermediate_mafdb_files"
            },
            "active": true
        },
        {
            "activity": "maf_database_aggregator",
            "provider": "aws_lambda",
            "memory": 512,
            "strategy": "for_all_inputs",
            "data_params": {
                "param_in": "intermediate_mafdb_files",
                "param_out": "final_mafdb_file"
            },
            "active": true
        }
    ],
    "provider_info": [
        {
            "provider_name": "AWS Lambda",
            "provider_tag": "aws_lambda",
            "configurations": [
                {
                    "timeout": 30,
                    "memory_mb": 128,
                    "cpu": 1,
                    "storage_mb": 512
                },
                {
                    "timeout": 45,
                    "memory_mb": 256,
                    "cpu": 1,
                    "storage_mb": 512
                },
                {
                    "timeout": 300,
                    "memory_mb": 512,
                    "cpu": 1,
                    "storage_mb": 512
                },
                {
                    "timeout": 300,
                    "memory_mb": 1024,
                    "cpu": 1,
                    "storage_mb": 512
                },
                {
                    "timeout": 300,
                    "memory_mb": 2048,
                    "cpu": 1,
                    "storage_mb": 512
                }
            ]
        },
        {
            "provider_name": "AWS EC2",
            "provider_tag": "aws_ec2",
            "configurations": [
                {
                    "timeout": 0,
                    "memory_mb": 1024,
                    "cpu": 1,
                    "storage_mb": 8192
                }
            ]
        },
        {
            "provider_name": "Local",
            "provider_tag": "local",
            "configurations": []
        }
    ],
    "workflow_info": {
        "workflow_name": "AWS Lambda Evaluation",
        "workflow_description": "Performance Evaluation of Lambda Functions in AWS",
        "activities": [
            {
                "activity_name": "tree_constructor",
                "activity_description": "Constructing Phylogenetic Trees from Protein Sequences"
            },
            {
                "activity_name": "subtree_constructor",
                "activity_description": "Generating Subtrees from Main Trees"
            },
            {
                "activity_name": "maf_database_creator",
                "activity_description": "Creating MAF Databases from Subtrees (Subtree Pair Frequency Matrix)"
            },
            {
                "activity_name": "maf_database_aggregator",
                "activity_description": "Aggregating MAF Databases"
            }
        ]
    },
    "statistics_info": {
        "default_separator": "\t",
        "default_statistics": {
            "START": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string",
                    "separator": " "
                },
                {
                    "searchKey": "Version",
                    "fieldName": "version",
                    "dataType": "string"
                }
            ],
            "END": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                }
            ],
            "REPORT": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                },
                {
                    "searchKey": "Duration",
                    "fieldName": "duration",
                    "dataType": "float"
                },
                {
                    "searchKey": "Billed Duration",
                    "fieldName": "billed_duration",
                    "dataType": "float"
                },
                {
                    "searchKey": "Memory Size",
                    "fieldName": "memory_size",
                    "dataType": "integer"
                },
                {
                    "searchKey": "Max Memory Used",
                    "fieldName": "max_memory_used",
                    "dataType": "integer"
                },
                {
                    "searchKey": "Init Duration",
                    "fieldName": "init_duration",
                    "dataType": "float"
                }
            ],
            "FILE_TRANSFER": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                },
                {
                    "searchKey": "FileName",
                    "fieldName": "file_name",
                    "dataType": "string"
                },
                {
                    "searchKey": "Bucket",
                    "fieldName": "file_bucket",
                    "dataType": "string"
                },
                {
                    "searchKey": "FilePath",
                    "fieldName": "file_path",
                    "dataType": "string"
                },
                {
                    "searchKey": "FileSize",
                    "fieldName": "file_size",
                    "dataType": "integer"
                },
                {
                    "searchKey": "TransferType",
                    "fieldName": "transfer_type",
                    "dataType": "string"
                },
                {
                    "searchKey": "TransferDuration",
                    "fieldName": "transfer_duration",
                    "dataType": "float"
                }
            ],
            "CONSUMED_FILES_INFO": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                },
                {
                    "searchKey": "FilesCount",
                    "fieldName": "consumed_files_count",
                    "dataType": "integer"
                },
                {
                    "searchKey": "FilesSize",
                    "fieldName": "consumed_files_size",
                    "dataType": "integer"
                },
                {
                    "searchKey": "TransferDuration",
                    "fieldName": "consumed_files_transfer_duration",
                    "dataType": "float"
                }
            ],
            "PRODUCED_FILES_INFO": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                },
                {
                    "searchKey": "FilesCount",
                    "fieldName": "produced_files_count",
                    "dataType": "integer"
                },
                {
                    "searchKey": "FilesSize",
                    "fieldName": "produced_files_size",
                    "dataType": "integer"
                },
                {
                    "searchKey": "TransferDuration",
                    "fieldName": "produced_files_transfer_duration",
                    "dataType": "float"
                }
            ]
        },
        "custom_statistics": {
            "TREE_CONSTRUCTOR": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                },
                {
                    "searchKey": "Duration",
                    "fieldName": "tree_duration",
                    "dataType": "float",
                    "description": "Execution time of the tree construction activity"
                }
            ],
            "SUBTREE_CONSTRUCTOR": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                },
                {
                    "searchKey": "Duration",
                    "fieldName": "subtree_duration",
                    "dataType": "float",
                    "description": "Execution time of the subtree creation activity"
                }
            ],
            "MAF_DATABASE_CREATOR": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                },
                {
                    "searchKey": "InputSubtrees",
                    "fieldName": "input_subtrees",
                    "dataType": "string",
                    "description": "Subtrees used as input for the MAF database creation activity"
                },
                {
                    "searchKey": "Duration",
                    "fieldName": "maf_db_creator_duration",
                    "dataType": "float",
                    "description": "Execution time of the MAF database creation activity"
                }
            ],
            "MAF_DATABASE_AGGREGATOR": [
                {
                    "searchKey": "RequestId",
                    "fieldName": "request_id",
                    "dataType": "string"
                },
                {
                    "searchKey": "MaxMaf",
                    "fieldName": "max_maf",
                    "dataType": "integer",
                    "description": "Max MAF value found during input file processing"
                },
                {
                    "searchKey": "MafDatabase",
                    "fieldName": "maf_database",
                    "dataType": "string",
                    "description": "Value of the \"maf_database\" dictionary obtained at the end of the activity"
                },
                {
                    "searchKey": "Duration",
                    "fieldName": "maf_db_aggregator_duration",
                    "dataType": "float",
                    "description": "Execution time of the MAF database aggregation activity"
                }
            ]
        }
    },
    "env_properties": {
        "denethor": {
            "log.path": "resources/logs/[provider_tag]",
            "log.file": "log_[execution_tag]_[activity_name].log",
            "log.metadata_file": "[execution_tag]_[n_files]_files__[memory]_memory.json"
        },
        "bucket": {
            "name": "denethor",
            "key.input_files": "data/full_dataset",
            "key.tree_constructor": "tree",
            "key.subtree_constructor": "subtree",
            "key.maf_database_creator": "mafdb",
            "key.maf_database_aggregator": "mafdb"
        },
        "aws_lambda": {
            "data_format": "nexus",
            "path.input_files": "/tmp/input",
            "path.tmp": "/tmp",
            "path.tree_constructor": "/tmp/tree",
            "path.subtree_constructor": "/tmp/subtree",
            "path.maf_database_creator": "/tmp/mafdb",
            "path.maf_database_aggregator": "/tmp/mafdb",
            "path.clustalw": "/opt/python/clustalw-2.1-linux",
            "log.output_type": "stdout"
        },
        "aws_ec2": {
            "instance_id": "i-0f2f2ec6dd1e6a455",
            "data_format": "nexus",
            "path.src": "src/lambda",
            "target_method": "handler",
            "path.input_files": "resources/data/full_dataset",
            "path.tmp": ".tmp",
            "path.tree_constructor": ".tmp/tree",
            "path.subtree_constructor": ".tmp/subtree",
            "path.maf_database_creator": ".tmp/mafdb",
            "path.maf_database_aggregator": ".tmp/mafdb",
            "path.clustalw": "resources/libs/clustalw-2.1-linux",
            "log.output_type": "file"
        },
        "local": {
            "data_format": "nexus",
            "path.src": "src/lambda",
            "target_method": "handler",
            "path.input_files": "resources/data/full_dataset",
            "path.tmp": ".tmp",
            "path.tree_constructor": ".tmp/tree",
            "path.subtree_constructor": ".tmp/subtree",
            "path.maf_database_creator": ".tmp/mafdb",
            "path.maf_database_aggregator": ".tmp/mafdb",
            "path.clustalw": "resources/libs/clustalw-2.1-linux",
            "log.output_type": "stdout_and_file"
        }
    }
}